#!/bin/sh
# Moviuro, <moviuro+nagios[at]gmail.com>
# We try to fetch a file that does not exist on the server:
# > if I get a file not found, then it works.

# define command{
#        command_name    check_tftp
#        command_line    $USER1$/ginfo-nagios-plugins/server/check_tftp -H $HOSTADDRESS$ -p $ARG1$
# }

# define service{
#        use                     <template>
#        host_name               <hostname>
#        service_description     TFTPd
#        check_command           check_tftp!69
# }

# Defaults
port=69
file=gpxelinux.0
shasum=784d72d98bd2eaf70e64019d5a1adaf2ad7155be2329865b6c382f1dd9756d81fac6fca8dbd5c5c91770bf641ac68055ce9f698a13400cbaf4f46be5e41aa207
emptysha=cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e

state_ok=0
state_warning=1
state_critical=2
state_unknown=3
state_dependent=4

# parsing options
while [ $# -gt 1 ]; do
    case $1 in
        -H|-host)
            host="$2"
            ;;
        -p|-port)
            port="$2"
            ;;
        -f|-file)
            file="$2"
            ;;
        -s|-sha)
            shasum="$2"
            ;;
    esac
    shift 2
done

if [ -z "$host" ]; then
    echo "check_tftp requires a -H option"
    exit "$state_dependent"
fi

tmp="$(mktemp -d)"
result="$(printf 'get %s %s\n' "$file" "$tmp/$file" | tftp "$host" "$port" 2>&1)"
calculated="$(sha512 -q "$tmp/$file")"

if [ "$calculated" = "$shasum" ]; then
    echo "TFTPd OK - $file got DLed and matches checksum"
    ret="$state_ok"
elif [ "$calculated" = "$emptysha" ]; then
    echo "TFTPd CRITICAL - no answer from server!"
    ret="$state_warning"
else
    case "$result" in
    *"File not found"*)
        echo "TFTPd WARNING - $file not found"
        ret="$state_warning"
        ;;
    *)
        echo "TFTPd WARNING - $file has unexpected SHA"
        ret="$state_warning"
    esac
fi

rm -rf "$tmp"
exit "$ret"
