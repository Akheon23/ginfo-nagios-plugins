#!/bin/sh
# Moviuro <moviuro[at]gmail.com>

# check_raid_obsd -d <disk> [-c <num>]

# requires sudo authorization for the nrpe user on command "bioctl <disk>"
# /etc/sudoers
# Cmnd_Alias RAIDSTATUS = /sbin/bioctl <disk>
# # replace _nrpe with the actual name of the NRPE user
# _nrpe   ALL=RAIDSTATUS, NOPASSWD: RAIDSTATUS

# [...]/nrpe.cfg
# command[check_raid_sd0]=/<path>/ginfo-nagios-plugins/client/check_raid_obsd -d <drive>

# define service{
#        use                     <template>
#        host_name               <hostname>
#        service_description     RAID health
#        notification_interval   1440                            ; Once every 24 hours, because it's not easy to change
#        check_command           check_nrpe!check_raid_<drive>
# }

state_ok=0
state_warning=1
state_critical=2
state_unknown=3
state_dependent=4

crit=1 # if the number of dead drives is > $crit,
       # then the service will return "CRITICAL"

case "$1" in
    -d)
        disk="$2"
        shift 2
        ;;
    -c)
        crit="$2"
        shift 2
        ;;
esac

if [ -z "$disk" ]; then
    echo "requires disk"
    exit "$state_dependent"
fi

result=$(sudo bioctl "$disk" 2>&1)
case "$result" in
    *denied*)
        echo "RAID UNKNOWN $disk - $(whoami) is not allowed to run bioctl"
        exit $state_unknown
        ;;
    *Degraded*)
        broken=$(echo "$result" | grep Offline | wc -l)
        if [ "$broken" -gt "$crit" ]; then
            echo "RAID CRITICAL $disk - $broken disks are Offline"
            exit $state_critical
        fi
        echo "RAID WARNING $disk - $broken disks are Offline"
        exit "$state_warning"
        ;;
esac

echo "RAID OK $disk"
exit $state_ok
